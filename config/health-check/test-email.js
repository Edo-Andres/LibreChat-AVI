const { config, validateConfig } = require('./load-config');
const EmailNotifier = require('../services/email-notifier');

async function testEmailConfiguration() {
  console.log('üß™ Iniciando test de configuraci√≥n de email...');
  
  try {
    // Validar configuraci√≥n b√°sica
    validateConfig();
    
    // Crear instancia del notificador
    const emailNotifier = new EmailNotifier();
    
    console.log('üìß Enviando email de prueba...');
    
    // Simular resultados de prueba exitosos
    const testResults = {
      success: true,
      duration: 1500,
      steps: {
        config: true,
        login: true,
        loadData: true,
        sendMessage: true
      },
      details: {
        configStatus: 200,
        bannerStatus: 200,
        loginStatus: 200,
        userDataStatus: 200,
        agentsDataStatus: 200,
        messageStatus: 200,
        responseSize: 2340
      }
    };
    
    // Preparar datos del email de prueba
    const emailData = {
      subject: 'üß™ Test Email - Health Check LibreChat AVI',
      isSuccess: true,
      testResults: testResults,
      config: config
    };
    
    // Enviar email de prueba
    await emailNotifier.sendNotification(emailData);
    
    console.log('‚úÖ Email de prueba enviado exitosamente');
    console.log(`üìß Destinatario: ${config.adminEmail}`);
    console.log('üéâ Configuraci√≥n de email validada correctamente');
    
  } catch (error) {
    console.error('‚ùå Error en test de email:', error.message);
    console.error('');
    console.error('üîç Posibles causas:');
    console.error('   - Variables EMAIL_* no configuradas correctamente');
    console.error('   - Credenciales de email incorrectas');
    console.error('   - Configuraci√≥n SMTP incorrecta');
    console.error('   - Firewall bloqueando conexi√≥n SMTP');
    console.error('');
    console.error('üí° Verifica las variables de entorno:');
    console.error('   - EMAIL_HOST, EMAIL_PORT, EMAIL_SERVICE');
    console.error('   - EMAIL_USERNAME, EMAIL_PASSWORD');
    console.error('   - EMAIL_FROM, EMAIL_FROM_NAME');
    console.error('   - HEALTH_CHECK_ADMIN_EMAIL');
    
    process.exit(1);
  }
}

// Ejecutar test si es llamado directamente
if (require.main === module) {
  testEmailConfiguration();
}

module.exports = testEmailConfiguration; 